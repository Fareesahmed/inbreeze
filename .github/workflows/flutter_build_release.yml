name: Flutter Build Release

on:
  push:
    branches:
      - main

jobs:
  android:
    name: Build APK & AAB
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '3.7'

    - name: Install Dependencies
      run: flutter pub get

    - name: Build APK
      run: flutter build apk --release

    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: apk-artifact
        path: build/app/outputs/flutter-apk/app-release.apk

  ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v1

    - name: Install Dependencies
      run: flutter pub get

    - name: Build iOS
      run: flutter build ios --release --no-codesign

    - name: Archive iOS app
      run: tar -czf build/ios/iphoneos/ios_unsigned.app.tar.gz build/ios/iphoneos/Runner.app
    
    - name: Upload iOS app as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ios-artifact
        path: build/ios/iphoneos/ios_unsigned.app.tar.gz

  linux:
    name: Build Linux
    runs-on: ubuntu-latest
    environment: nix
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Nix
      uses: cachix/install-nix-action@v20
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          experimental-features = nix-command flakes

    - name: Nix magic
      uses: DeterminateSystems/magic-nix-cache-action@v2
    
    - name: Build Linux Executable
      run: |
        nix develop --command bash -c "flutter build linux --release"

    - name: Archive Linux executable
      run: tar -czf build/linux/x64/release/linux_app.tar.gz build/linux/x64/release/bundle

    - name: Upload Linux executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-artifact
        path: build/linux/x64/release/linux_app.tar.gz

  windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '3.7'

    - name: Install Dependencies
      run: flutter pub get

    - name: Build Windows Executable
      run: flutter build windows --release

    - name: Archive Windows executable
      run: 7z a build/windows/runner/Release/win_app.exe.zip build/windows/runner/Release/

    - name: Upload Windows executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-artifact
        path: build/windows/runner/Release/win_app.exe.zip

  release:
    name: Release Builds
    needs: [android, ios, linux, windows] 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Download APK Artifact
      uses: actions/download-artifact@v2
      with:
        name: apk-artifact
        path: build/app/outputs/flutter-apk/

    - name: Download AAB Artifact
      uses: actions/download-artifact@v2
      with:
        name: aab-artifact
        path: build/app/outputs/flutter-apk/
    
    - name: Download iOS Artifact
      uses: actions/download-artifact@v2
      with:
        name: ios-artifact
        path: build/ios/iphoneos/
    
    - name: Download Linux Artifact
      uses: actions/download-artifact@v2
      with:
        name: linux-artifact
        path: build/linux/x64/release/

    - name: Download Windows Artifact
      uses: actions/download-artifact@v2
      with:
        name: windows-artifact
        path: build/windows/runner/Release/

    - name: Create Release and Upload Builds
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          build/app/outputs/flutter-apk/app-release.apk
          build/ios/iphoneos/ios_unsigned.app.tar.gz
          build/linux/x64/release/linux_app.tar.gz
          build/windows/runner/Release/win_app.exe.zip
